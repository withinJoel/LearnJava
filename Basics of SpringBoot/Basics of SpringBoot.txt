* Create a new project in IntelliJ IDEA
# In the `New Project` window.
    * Select `Spring Initializr`.
    * Click `Next`.
# Configure the project settings
   - Group: `com.example`
   - Artifact: `demo`
   - Name: `demo`
   - Type: `Gradle Project`
   - Language: `Java`
   - Click `Next`.
# Select dependencies
   * In the `Dependencies` section, add the following:
   - `Spring Web`
   - Click `Next`, then `Finish`.

# Configure Gradle Build Script
* Note: IntelliJ will create the project structure and a `build.gradle` file.
* Open the `build.gradle` file and make sure it includes the necessary dependencies and plugins:
`groovy
    plugins {
        id 'org.springframework.boot' version '2.7.1'
        id 'io.spring.dependency-management' version '1.0.11.RELEASE'
        id 'java'
    }

    group = 'com.example'
    version = '0.0.1-SNAPSHOT'
    sourceCompatibility = '17'

    repositories {
        mavenCentral()
    }

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
    }

    tasks.named('test') {
        useJUnitPlatform()
    }`

# Create Controller and View
* Create a controller
    - In `src/main/java/com/example/demo`, create a new package named `controller`.
    - Inside the `controller` package, create a new Java class named `HomeController.java`:

`package com.example.demo.controller;

    import org.springframework.stereotype.Controller;
    import org.springframework.web.bind.annotation.GetMapping;
    import org.springframework.web.bind.annotation.RequestMapping;
    import org.springframework.web.bind.annotation.ResponseBody;

    @Controller
    public class HomeController {

        @GetMapping("/")
        public String home() {
            return "index";
        }
    }`

# Create a JSP View
* Create a directory named `webapp` under `src/main` (i.e., `src/main/webapp`).
* Inside `webapp`, create a subdirectory named `WEB-INF`.
* Create a file named `index.jsp` in `src/main/webapp/WEB-INF`:
`<%@ page contentType="text/html;charset=UTF-8" language="java" %>
    <!DOCTYPE html>
    <html>
    <head>
        <title>Home Page</title>
    </head>
    <body>
        <h1>Welcome to the Spring Boot JSP Example!</h1>
    </body>
    </html>`

# Configure Spring Boot for JSP
* Update the application.properties file**:
- Open `src/main/resources/application.properties` and add the following lines to configure JSP view resolver:

   `spring.mvc.view.prefix=/WEB-INF/
    spring.mvc.view.suffix=.jsp`
# Run the Application
- You can run your Spring Boot application by clicking the green `Run` button in IntelliJ or by running `./gradlew bootRun` from the terminal.
# Access the application
- Open your browser and navigate to `http://localhost:8080`. You should see the "Welcome to the Spring Boot JSP Example!" message.